ARG TOOLCHAINS_TAG=v0.1.8

FROM ghcr.io/goreleaser/goreleaser-cross-toolchains:${TOOLCHAINS_TAG}

LABEL maintainer="Artur Troian <troian dot ap at gmail dot com>"
LABEL "org.opencontainers.image.source"="https://github.com/goreleaser/goreleaser-cross-base"

ARG DEBIAN_FRONTEND=noninteractive
ARG TINI_VERSION
ARG GO_VERSION
ARG TARGETARCH
ARG COSIGN_VERSION

COPY entrypoint.sh /

# Install deps
RUN \
    echo "Starting image build for Debian" \
 && sed -ri "s/(httpredir|deb).debian.org/${APT_MIRROR:-deb.debian.org}/g" /etc/apt/sources.list \
 && sed -ri "s/(security).debian.org/${APT_MIRROR:-security.debian.org}/g" /etc/apt/sources.list \
 && apt-get update \
 && apt-get install --no-install-recommends -y -q \
    software-properties-common \
    curl \
    gnupg2 \
    openssh-client \
 && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add - \
 && echo "deb [arch=$TARGETARCH] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list \
 && apt-get update \
 && apt-get install --no-install-recommends -y -q \
        docker-ce \
        docker-ce-cli \
        tini \
 && apt -y autoremove \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
 && wget https://go.dev/dl/go${GO_VERSION}.linux-${TARGETARCH}.tar.gz \
 && rm -rf /usr/local/go && tar -C /usr/local -xzf go${GO_VERSION}.linux-${TARGETARCH}.tar.gz \
 && rm go${GO_VERSION}.linux-${TARGETARCH}.tar.gz \
 && wget https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/cosign_${COSIGN_VERSION}_${TARGETARCH}.deb \
 && dpkg -i cosign_${COSIGN_VERSION}_${TARGETARCH}.deb \
 && rm cosign_${COSIGN_VERSION}_${TARGETARCH}.deb \
 && chmod +x /entrypoint.sh

COPY --from=docker/buildx-bin:latest /buildx /usr/libexec/docker/cli-plugins/docker-buildx

ENV OSX_CROSS_PATH=/usr/local/osxcross
ENV PATH=$PATH:/usr/local/go/bin
ENV PATH=$PATH:"$OSX_CROSS_PATH/bin"

ENTRYPOINT ["/usr/bin/tini", "--", "/entrypoint.sh"]
